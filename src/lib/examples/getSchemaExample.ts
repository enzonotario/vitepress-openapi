import type { OAProperty } from '../getSchemaUi'
import type { OAExampleObject } from '../../types'
import { getSchemaUiJson } from './getSchemaUiJson'
import { getSchemaUiXml } from './getSchemaUiXml'

export function getSchemaExample(contentType: string, uiProperties: OAProperty[] | OAProperty, useExample = false): Record<string, OAExampleObject> {
  if (contentType.toLowerCase().match(/^(text|application)\/.*xml($|;|\\+)/)) {
    return {
      XML: getSchemaExampleValue(contentType, uiProperties, useExample),
    }
  }

  return {
    JSON: getSchemaExampleValue(contentType, uiProperties, useExample),
  }
}

function getSchemaExampleValue(contentType: string, uiProperties: OAProperty[] | OAProperty, useExample = false): OAExampleObject {
  if (contentType.toLowerCase().match(/^(text|application)\/.*xml($|;|\\+)/)) {
    return {
      summary: 'XML',
      description: '',
      value: getSchemaUiXml(uiProperties, useExample),
      isAutogenerated: true,
    } as OAExampleObject
  }

  return {
    summary: 'JSON',
    description: '',
    value: getSchemaUiJson(uiProperties, useExample),
    isAutogenerated: true,
  } as OAExampleObject
}
