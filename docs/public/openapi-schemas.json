{
  "openapi": "3.0.0",
  "info": {
    "title": "Example of an OpenAPI document different schemas",
    "version": "1.0.0"
  },
  "paths": {
    "/circular-reference": {
      "get": {
        "summary": "Get a parent",
        "operationId": "getCircularReference",
        "description": "Example of a JSON object with a circular reference.",
        "responses": {
          "200": {
            "description": "A parent with a child",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parent"
                }
              }
            }
          }
        }
      }
    },
    "/multiple-levels": {
      "get": {
        "summary": "Get the root object",
        "operationId": "getMultipleLevels",
        "description": "Example of a JSON object with multiple levels.",
        "responses": {
          "200": {
            "description": "Example of a deeply nested structure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Level1"
                }
              }
            }
          }
        }
      }
    },
    "/primitive-string": {
      "get": {
        "summary": "Get a string",
        "operationId": "getPrimitiveString",
        "description": "Example of a JSON object with a string.",
        "responses": {
          "200": {
            "description": "A string",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Hello, World!"
                }
              }
            }
          }
        }
      }
    },
    "/primitive-number": {
      "get": {
        "summary": "Get a number",
        "operationId": "getPrimitiveNumber",
        "description": "Example of a JSON object with a number.",
        "responses": {
          "200": {
            "description": "A number",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "example": 42
                }
              }
            }
          }
        }
      }
    },
    "/primitive-boolean": {
      "get": {
        "summary": "Get a boolean",
        "operationId": "getPrimitiveBoolean",
        "description": "Example of a JSON object with a boolean.",
        "responses": {
          "200": {
            "description": "A boolean",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/nullable-object": {
      "get": {
        "summary": "Get a nullable object",
        "operationId": "getNullableObject",
        "description": "Example of a JSON object that can be null.",
        "responses": {
          "200": {
            "description": "A nullable object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NullableObject"
                }
              }
            }
          }
        }
      }
    },
    "/tuple-array": {
      "get": {
        "summary": "Get a tuple array with prefixItems",
        "operationId": "getTupleArray",
        "description": "Example of a JSON array with prefixItems defining a tuple structure.",
        "responses": {
          "200": {
            "description": "A tuple array with fixed positions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TupleArray"
                }
              }
            }
          }
        }
      }
    },
    "/mixed-array": {
      "get": {
        "summary": "Get a mixed array with prefixItems and items",
        "operationId": "getMixedArray",
        "description": "Example of a JSON array with both prefixItems and items schemas.",
        "responses": {
          "200": {
            "description": "An array with fixed positions followed by additional items",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MixedArray"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Parent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "child": {
            "$ref": "#/components/schemas/Child"
          }
        }
      },
      "Child": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/Parent"
          }
        }
      },
      "Level1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level2": {
            "$ref": "#/components/schemas/Level2"
          }
        }
      },
      "Level2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level3": {
            "$ref": "#/components/schemas/Level3"
          }
        }
      },
      "Level3": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level4": {
            "$ref": "#/components/schemas/Level4"
          }
        }
      },
      "Level4": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level5": {
            "$ref": "#/components/schemas/Level5"
          }
        }
      },
      "Level5": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level6": {
            "$ref": "#/components/schemas/Level6"
          }
        }
      },
      "Level6": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level7": {
            "$ref": "#/components/schemas/Level7"
          }
        }
      },
      "Level7": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level8": {
            "$ref": "#/components/schemas/Level8"
          }
        }
      },
      "Level8": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level9": {
            "$ref": "#/components/schemas/Level9"
          }
        }
      },
      "Level9": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level10": {
            "$ref": "#/components/schemas/Level10"
          }
        }
      },
      "Level10": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level11": {
            "$ref": "#/components/schemas/Level11"
          }
        }
      },
      "Level11": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level12": {
            "$ref": "#/components/schemas/Level12"
          }
        }
      },
      "Level12": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level13": {
            "$ref": "#/components/schemas/Level13"
          }
        }
      },
      "Level13": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level14": {
            "$ref": "#/components/schemas/Level14"
          }
        }
      },
      "Level14": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level15": {
            "$ref": "#/components/schemas/Level15"
          }
        }
      },
      "Level15": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level16": {
            "$ref": "#/components/schemas/Level16"
          }
        }
      },
      "Level16": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level17": {
            "$ref": "#/components/schemas/Level17"
          }
        }
      },
      "Level17": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level18": {
            "$ref": "#/components/schemas/Level18"
          }
        }
      },
      "Level18": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level19": {
            "$ref": "#/components/schemas/Level19"
          }
        }
      },
      "Level19": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level20": {
            "$ref": "#/components/schemas/Level20"
          }
        }
      },
      "Level20": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "finalValue": {
            "type": "string"
          }
        }
      },
      "NullableObject": {
        "type": ["object", "null"],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "TupleArray": {
        "type": "array",
        "description": "A tuple array with fixed position types using prefixItems",
        "prefixItems": [
          {
            "type": "string",
            "description": "First element - always a string",
            "example": "username"
          },
          {
            "type": "number",
            "description": "Second element - always a number",
            "example": 42
          },
          {
            "type": "boolean",
            "description": "Third element - always a boolean",
            "example": true
          },
          {
            "type": "object",
            "description": "Fourth element - a complex object",
            "properties": {
              "id": {
                "type": "string",
                "example": "abc123"
              },
              "value": {
                "type": "number",
                "example": 99.5
              }
            }
          },
          {
            "type": "array",
            "description": "Fifth element - an array of strings",
            "items": {
              "type": "string"
            },
            "example": ["tag1", "tag2", "tag3"]
          }
        ],
        "minItems": 5,
        "maxItems": 5
      },
      "MixedArray": {
        "type": "array",
        "description": "An array with both prefixItems and items schemas",
        "prefixItems": [
          {
            "type": "string",
            "description": "First element - always a string identifier",
            "example": "user-id-123"
          },
          {
            "type": "object",
            "description": "Second element - user metadata",
            "properties": {
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "role": {
                "type": "string",
                "enum": ["admin", "user", "guest"],
                "example": "admin"
              }
            }
          }
        ],
        "items": {
          "type": "object",
          "description": "Additional elements - data entries",
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "example": "2023-01-15T14:30:00Z"
            },
            "value": {
              "type": "number",
              "example": 42.5
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": ["important", "reviewed"]
            }
          }
        },
        "minItems": 2,
        "example": [
          "user-id-123",
          {
            "name": "John Doe",
            "role": "admin"
          },
          {
            "timestamp": "2023-01-15T14:30:00Z",
            "value": 42.5,
            "tags": ["important", "reviewed"]
          },
          {
            "timestamp": "2023-01-16T09:15:00Z",
            "value": 17.8,
            "tags": ["pending"]
          }
        ]
      }
    }
  }
}
