{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "User API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://dummyjson.com"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "List all users",
        "description": "List all users available.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many items to return at one time (max 100)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Custom-Header",
            "in": "header",
            "description": "Custom header for additional information",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user in the system.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "description": "User object that needs to be added to the system",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an existing user",
        "description": "Update an existing user in the system.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "description": "User object that needs to be updated in the system",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "description": "Delete a user from the system.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "description": "The id of the user to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partially update a user",
        "description": "Partially update a user in the system.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "description": "User object that needs to be partially updated in the system",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User partially updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "options": {
        "summary": "Get options for the users endpoint",
        "description": "Get options for the users endpoint.",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Options retrieved successfully",
            "headers": {
              "Allow": {
                "description": "Allowed methods",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "head": {
        "summary": "Check if users endpoint is available",
        "description": "Check if users endpoint is available.",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Endpoint is available"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Info for a specific user",
        "operationId": "showUserById",
        "description": "Get info on a specific user.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The id of the user to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "id",
          "username",
          "firstName",
          "lastName",
          "email"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the user",
            "minimum": 1
          },
          "username": {
            "type": "string",
            "description": "Username of the user",
            "minLength": 3,
            "maxLength": 50
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user",
            "minLength": 1,
            "maxLength": 100
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user",
            "minLength": 1,
            "maxLength": 100
          },
          "maidenName": {
            "type": "string",
            "description": "Maiden name of the user",
            "minLength": 1,
            "maxLength": 100
          },
          "age": {
            "type": "integer",
            "description": "Age of the user",
            "minimum": 0,
            "maximum": 120
          },
          "gender": {
            "type": "string",
            "description": "Gender of the user",
            "enum": ["male", "female", "other"]
          },
          "email": {
            "type": "string",
            "description": "Email address of the user",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the user",
            "pattern": "^[+]?[0-9]{1,15}$"
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "description": "Birth date of the user"
          },
          "image": {
            "type": "string",
            "description": "URL to the user's profile image",
            "format": "uri"
          },
          "bloodGroup": {
            "type": "string",
            "description": "Blood group of the user"
          },
          "height": {
            "type": "number",
            "format": "float",
            "description": "Height of the user in meters",
            "minimum": 0.5,
            "maximum": 2.5
          },
          "weight": {
            "type": "number",
            "format": "float",
            "description": "Weight of the user in kilograms",
            "minimum": 3,
            "maximum": 300
          },
          "eyeColor": {
            "type": "string",
            "description": "Eye color of the user"
          },
          "hair": {
            "type": "object",
            "description": "Hair details of the user",
            "properties": {
              "color": {
                "type": "string",
                "description": "Hair color"
              },
              "type": {
                "type": "string",
                "description": "Hair type"
              }
            }
          },
          "ip": {
            "type": "string",
            "description": "IP address of the user",
            "format": "ipv4"
          },
          "address": {
            "type": "object",
            "description": "Address of the user",
            "properties": {
              "address": {
                "type": "string",
                "description": "Street address"
              },
              "city": {
                "type": "string",
                "description": "City"
              },
              "state": {
                "type": "string",
                "description": "State"
              },
              "stateCode": {
                "type": "string",
                "description": "State code"
              },
              "postalCode": {
                "type": "string",
                "description": "Postal code"
              },
              "coordinates": {
                "type": "object",
                "description": "Geographical coordinates",
                "properties": {
                  "lat": {
                    "type": "number",
                    "format": "float",
                    "description": "Latitude"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float",
                    "description": "Longitude"
                  }
                }
              },
              "country": {
                "type": "string",
                "description": "Country"
              }
            }
          },
          "macAddress": {
            "type": "string",
            "description": "MAC address of the user's device"
          },
          "university": {
            "type": "string",
            "description": "University attended by the user"
          },
          "bank": {
            "type": "object",
            "description": "Bank details of the user",
            "properties": {
              "cardExpire": {
                "type": "string",
                "description": "Card expiration date"
              },
              "cardNumber": {
                "type": "string",
                "description": "Card number"
              },
              "cardType": {
                "type": "string",
                "description": "Card type"
              },
              "currency": {
                "type": "string",
                "description": "Currency"
              },
              "iban": {
                "type": "string",
                "description": "IBAN number"
              }
            }
          },
          "company": {
            "type": "object",
            "description": "Company details of the user",
            "properties": {
              "department": {
                "type": "string",
                "description": "Department"
              },
              "name": {
                "type": "string",
                "description": "Company name"
              },
              "title": {
                "type": "string",
                "description": "Job title"
              },
              "address": {
                "type": "object",
                "description": "Company address",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Street address"
                  },
                  "city": {
                    "type": "string",
                    "description": "City"
                  },
                  "state": {
                    "type": "string",
                    "description": "State"
                  },
                  "stateCode": {
                    "type": "string",
                    "description": "State code"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Postal code"
                  },
                  "coordinates": {
                    "type": "object",
                    "description": "Geographical coordinates",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude"
                      }
                    }
                  },
                  "country": {
                    "type": "string",
                    "description": "Country"
                  }
                }
              }
            }
          },
          "ein": {
            "type": "string",
            "description": "Employer Identification Number"
          },
          "ssn": {
            "type": "string",
            "description": "Social Security Number"
          },
          "userAgent": {
            "type": "string",
            "description": "User agent string"
          },
          "crypto": {
            "type": "object",
            "description": "Cryptocurrency details",
            "properties": {
              "coin": {
                "type": "string",
                "description": "Cryptocurrency coin"
              },
              "wallet": {
                "type": "string",
                "description": "Wallet address"
              },
              "network": {
                "type": "string",
                "description": "Network type"
              }
            }
          },
          "role": {
            "type": "string",
            "description": "Role of the user"
          }
        }
      },
      "UserListResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "total": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
